{"version":3,"sources":["components/Button.js","components/Sleep.js","components/BinarySearch.js","components/Swap.js","components/InsertionSort.js","components/DynamicIsSorted.js","components/Quicksort.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","divStyle","backgroundColor","bgColor","color","borderRadius","radius","padding","cursor","style","onClick","onClickFunction","disabled","text","sleep","ms","Promise","resolve","setTimeout","a","l","r","array","length","mid","Math","floor","setDisplayArray","map","value","index","className","height","heightMultiplier","width","id","fontSize","font","searchValue","setDisplayState","displayStateRef","current","setSearchState","binarySeach","swap","i","j","temp","setArray","delay","insertionSort","DynamicIsSorted","startingIndex","low","high","pivot","quickSort","console","log","quickSortMain","partition","then","partitionIndex","MAX_LENGTH","max","window","outerWidth","initialSize","DELAY","WIDTH_CONSTANT","innerWidth","WIDTH","generate","min","num","random","push","calcFontSize","App","useState","arraySize","setArraySize","arrayRef","arrayDisplay","displayState","searchState","setSearchValue","searchValueRef","isSorted","setIsSorted","innerHeight","size","setSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","sortProps","searchProps","searchValueRefCurrent","type","onChange","event","target","binarySearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e8a865.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    const divStyle = {\r\n        backgroundColor: props.bgColor,\r\n        color: props.color,\r\n        borderRadius: props.radius,\r\n        padding: '0.5rem',\r\n        cursor: props.cursor,\r\n    }\r\n    return (\r\n        <button style={divStyle} onClick={props.onClickFunction} disabled={props.disabled}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\nexport default sleep","import sleep from './Sleep'\r\n\r\nasync function binarySeach (props) {\r\n  //console.log(props.searchValue, props.searchValueRefCurrent)\r\n  let l = 0;\r\n  let r = props.array.length - 1\r\n  let mid\r\n  //console.log(props.array)\r\n  while (l <= r) {\r\n      mid = Math.floor((r+l)/2)\r\n      props.setDisplayArray(props.array.map((value, index) => {\r\n        if (index === r || index === l || index === mid){\r\n          return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.height}px`, backgroundColor: 'red'}} key={index} id={index}><div className=\"bar-text\"  style={{fontSize:`${props.font}px`}}>{value}</div></div>\r\n        } else {\r\n          return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.height}px`}} key={index} id={index}><div className=\"bar-text\" style={{fontSize:`${props.font}px`}}>{value}</div></div>\r\n        }\r\n      }))\r\n      await sleep(1000)\r\n      if (props.searchValue > props.array[mid]) {\r\n          l = mid + 1\r\n      } else if (props.searchValue < props.array[mid]) {\r\n          r = mid - 1\r\n      } else {\r\n        props.setDisplayArray(props.array.map((value, index) => {\r\n          if (index === mid){\r\n            return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.height}px`, backgroundColor: '#00B6D3'}} key={index} id={index}><div className=\"bar-text\" style={{fontSize:`${props.font}px`}}>{value}</div></div>\r\n          } else {\r\n            return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.height}px`}} key={index} id={index}><div className=\"bar-text\" style={{fontSize:`${props.font}px`}}>{value}</div></div>\r\n          }\r\n        }))\r\n          //console.log(`found ${props.searchValue}`)\r\n          break\r\n      }\r\n      \r\n  }\r\n  //console.log('done')\r\n  props.setDisplayState(!props.displayStateRef.current)\r\n  props.setSearchState(false)\r\n}\r\n\r\nexport default binarySeach","const swap = (array, i, j) => {\r\n    let temp = array[i]\r\n    array[i] = array[j]\r\n    array[j] = temp\r\n}\r\n\r\nexport default swap","import sleep from './Sleep'\r\nimport swap from './Swap'\r\n\r\nasync function insertionSort (props) {\r\n    for (let i = 1; i < props.array.length; i++) {\r\n      for (let j = i; j >= 0 && props.array[j-1] > props.array[j] ; j--) {\r\n        \r\n        \r\n        props.setDisplayArray(props.array.map((value, index) => {\r\n          if (index === j || index === j-1){\r\n            return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`, backgroundColor: 'red'}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n          } else {\r\n            return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n          }\r\n        }))\r\n        swap(props.array, j-1, j)\r\n        props.setArray(props.array)\r\n        \r\n        await sleep(props.delay)\r\n      }\r\n    }\r\n    props.setArray(props.array)\r\n    props.setDisplayArray(props.array.map((value, index) => {\r\n        return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n    }))\r\n    props.setDisplayState(!props.displayStateRef.current)\r\n  }\r\n\r\n  export default insertionSort","\r\nconst DynamicIsSorted = (startingIndex, array) => {\r\n    let i = startingIndex\r\n    for (i; i < array.length - 1; i++) {\r\n        if (array[i] > array[i+1]) {\r\n            return i\r\n        }\r\n    }\r\n    return i\r\n}\r\n\r\nexport default DynamicIsSorted","import sleep from './Sleep'\r\nimport swap from './Swap'\r\nimport DynamicIsSorted from './DynamicIsSorted'\r\n\r\nasync function partition (props, low, high) {\r\n    let pivot = props.array[high]\r\n    let i = low - 1\r\n\r\n    //console.log('in partition', props)\r\n    for (let j = low; j <= high - 1; j++) {\r\n        //console.log('in partition for loop', props.array)    \r\n        if (props.array[j] < pivot) {\r\n            i++\r\n            props.setDisplayArray(props.array.map((value, index) => {\r\n                //console.log(value)\r\n                if (index === j || index === i){\r\n                  return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`, backgroundColor: 'red'}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n                } else {\r\n                  return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n                }\r\n            }))\r\n            swap(props.array, i, j)\r\n            props.setArray(props.array)\r\n                \r\n            await sleep(props.delay)\r\n        }\r\n    }\r\n    props.setDisplayArray(props.array.map((value, index) => {\r\n        if (index === i+1 || index === high){\r\n          return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`, backgroundColor: 'red'}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n        } else {\r\n          return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n        }\r\n    }))\r\n    swap(props.array, i+1, high)\r\n    props.setArray(props.array)\r\n    //console.log('in partition end', props.array)\r\n    await sleep(props.delay)\r\n    return i + 1\r\n}\r\nfunction quickSort(props, low, high) {\r\n  console.log(props.font)\r\n  let index = 0\r\n  quickSortMain(props, low, high)\r\n  function quickSortMain(props, low, high) {\r\n    if (low < high) {\r\n        let paritionPromise = partition(props, low, high) \r\n        paritionPromise.then((partitionIndex)=> {\r\n            quickSortMain(props, low, partitionIndex-1)\r\n            quickSortMain(props, partitionIndex+1, high)\r\n        })\r\n    } else {\r\n      index = DynamicIsSorted(index, props.array)\r\n      \r\n      if (index === props.array.length - 1) {\r\n        props.setArray(props.array)\r\n        props.setDisplayArray(props.array.map((value, index) => {\r\n            return <div className='bar' style = {{height: `${value*props.heightMultiplier}px`, width: `${props.width}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\r\n        }))\r\n        props.setDisplayState(false)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default quickSort\r\n\r\n\r\n\r\n//props.array.every((value, i, array)=>{return i === array.length -1 || array[i] <= array[i+1]})","import './styles/global.css'\n//import { useState } from 'react'\nimport { useEffect } from 'react'\nimport useState from 'react-usestateref'\nimport Button from './components/Button'\nimport binarySearch from './components/BinarySearch'\nimport insertionSort from './components/InsertionSort'\nimport quickSortMain from './components/Quicksort'\n\nconst MAX_LENGTH = () => {\n  let max = Math.floor(0.14901*window.outerWidth-20 - (0.14901*window.outerWidth-20) % 5)\n  if (max > 200 || max < 10) {\n    if (max > 200) {\n      return 200\n    } else {\n      return 10\n    }\n  }\n  return max\n}\n\nconst initialSize = Math.floor(MAX_LENGTH()/2)\nlet DELAY = 10*(200/(Math.floor(initialSize)))\nconst MIN_VALUE_GENERATED = 10;\nconst MAX_VALUE_GENERATED = 250;\nlet WIDTH_CONSTANT = window.innerWidth;\nconst WIDTH_MULTIPLIER = 0.7\nconst HEIGHT_MULTIPLIER = 1.0;\nlet WIDTH = WIDTH_MULTIPLIER*WIDTH_CONSTANT/(initialSize)\n\nconst generate = (min, max, num) => { \n  let array = [];\n\n\n  for (let i = 0; i < num; i++){\n    let value = Math.floor(Math.random() * max) + min\n    array.push(value)\n  }\n  return array\n}\n\n\nfunction useWindowSize(props) {\n  const [size, setSize] = useState ([window.innerHeight, window.innerWidth])\n  \n    useEffect(() => {\n      if (!props.displayState) {\n        const handleResize = () => {\n          setSize([window.innerHeight, window.innerWidth])\n          WIDTH_CONSTANT = window.innerWidth\n          WIDTH = WIDTH_MULTIPLIER*WIDTH_CONSTANT/(props.arrayRef.current.length)\n          if (WIDTH / 3 >= 7 && WIDTH / 3 <= 10) {\n            props.font = WIDTH / 3\n          } else if (WIDTH / 3 < 7){\n            props.font = 0\n          } else { \n            props.font = 10\n          }\n          // console.log(WIDTH, props.font)\n          props.setDisplayArray(props.arrayRef.current.map((value, index) => {\n            return <div className='bar' style = {{height: `${value*HEIGHT_MULTIPLIER}px`, width: `${WIDTH}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${props.font}px`}}>{value}</div></div>\n          }))\n        }\n        window.addEventListener(\"resize\", handleResize)\n        return () => {\n          window.removeEventListener('resize', handleResize)\n        }\n      }\n    }, [])\n  return size\n}\n\nfunction calcFontSize() {\n  let font = 0\n  // console.log(WIDTH / 3)\n  if (WIDTH / 3 >= 7 && WIDTH / 3 <= 10) {\n    font = WIDTH / 3\n  } else if (WIDTH / 3 < 7){\n    font = 0\n  } else { \n    font = 10\n  }\n  return font\n}\n\nfunction App() {\n  const [arraySize, setArraySize] = useState(initialSize)\n  const [array, setArray, arrayRef] = useState(generate(MIN_VALUE_GENERATED,MAX_VALUE_GENERATED,arraySize))\n  \n  let font = calcFontSize()\n  const [arrayDisplay, setDisplayArray, arrayDisplayRef] = useState(array.map((value, index) => {\n    return <div className='bar' style = {{height: `${value*HEIGHT_MULTIPLIER}px`, width: `${WIDTH}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${font}px`}}>{value}</div></div>\n  }))\n  \n  const [displayState, setDisplayState, displayStateRef] = useState(false)\n  const [searchState, setSearchState] = useState(false)\n  const [searchValue, setSearchValue, searchValueRef] = useState(0)\n  const [isSorted, setIsSorted, setIsSortedRef] = useState(false)\n  const [displayHeight, displayWidth] = useWindowSize({array: array, arrayRef: arrayRef, setDisplayArray: setDisplayArray, font: font, displayState: displayState})\n  //console.log(array)\n  let sortProps = {\n    font: font,\n    array: array, \n    setArray: setArray, \n    arrayDisplay: arrayDisplay, \n    setDisplayArray: setDisplayArray, \n    setDisplayState: setDisplayState,\n    displayStateRef: displayStateRef,\n    delay: DELAY,\n    width: WIDTH,\n    heightMultiplier: HEIGHT_MULTIPLIER,\n  }\n  let searchProps = {\n    font: font, \n    setSearchState: setSearchState,\n    searchValue: searchValue, \n    searchValueRefCurrent: searchValueRef.current, \n    array: array, \n    setArray: setArray, \n    arrayDisplay: arrayDisplay, \n    setDisplayArray: setDisplayArray, \n    setDisplayState: setDisplayState, \n    displayStateRef: displayStateRef\n  }\n\n  function insertionSortArray() {\n    setSearchState(false)\n    setDisplayState(!displayStateRef.current)\n    insertionSort(sortProps)\n    setIsSorted(true)\n  }\n\n  function quickSortArray(){\n    //console.log(font)\n    setSearchState(false)\n    setDisplayState(!displayStateRef.current)\n    quickSortMain(sortProps, 0, array.length - 1)\n    setIsSorted(true)\n  }\n\n  function binarySearchArray(){\n    setDisplayState(!displayStateRef.current)\n    setSearchState(true)\n    // want to generate a random value to search (one that could or could not be in the array), but want it the random generation to favor an element in the array\n    let value = Math.floor(Math.random()*(6))\n    // console.log(value)\n    setSearchValue(value < 4 ? array[Math.floor(Math.random()*(array.length-1))] : Math.floor(Math.random()*MAX_VALUE_GENERATED + MIN_VALUE_GENERATED))\n    //console.log(searchValue, searchValueRef)\n    searchProps.searchValue = searchValueRef.current\n    binarySearch(searchProps)\n  }\n  const clickGenerate = () =>{\n    // console.log(window.outerWidth, window.innerWidth)\n    DELAY = 10*(200/(arraySize))\n    WIDTH = WIDTH_MULTIPLIER*WIDTH_CONSTANT/(arraySize)\n    setArray(generate(MIN_VALUE_GENERATED,MAX_VALUE_GENERATED,arraySize))\n    setSearchState(false)\n    setIsSorted(false)\n    setDisplayArray(arrayRef.current.map((value, index) => {\n      return <div className='bar' style = {{height: `${value*HEIGHT_MULTIPLIER}px`, width: `${WIDTH}px`}} key={index} id={index}><div className=\"bar-text\" style={{ fontSize:`${calcFontSize()}px`}}>{value}</div></div>\n    }))\n    //clickGenerateDisplay()\n  }\n\n\n  return (\n    <div className=\"main\">\n      {/* {displayWidth}x\n      {displayHeight} */}\n      <div className=\"buttons\">\n        <span>{displayState && !searchState && `Sorting ${array.length} elements`} {!displayState && !searchState && `${arraySize} elements`}  </span>\n        {!displayState && <input type = \"range\" min =\"10\" max ={MAX_LENGTH()} value = {arraySize} onChange = {(event)=>{\n          setArraySize(event.target.value)\n        }}></input>}\n        {!(displayState) && <Button onClickFunction = {clickGenerate} bgColor=\"white\" color=\"black\" radius=\"5px\" text=\"generate array\" cursor=\"pointer\"></Button>}\n        {!(displayState) && <Button onClickFunction = {insertionSortArray} bgColor=\"white\" color=\"black\" radius=\"5px\" text=\"insertion sort\" disabled={isSorted} cursor=\"pointer\"></Button>}\n        {!(displayState) && <Button onClickFunction = {quickSortArray} bgColor=\"white\" color=\"black\" radius=\"5px\" text=\"quicksort\" disabled={isSorted} cursor=\"pointer\"></Button>}\n        {!(displayState) && <Button onClickFunction = {binarySearchArray} bgColor=\"white\" color=\"black\" radius=\"5px\" text=\"binary search\" disabled={!isSorted} cursor=\"pointer\"></Button>}\n      </div>\n      {(searchState) && <div className='search-status'>searching for: {searchValue}</div>}\n      <div className='array-display'>\n        {arrayDisplay}\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n\n\n// old way of displaying\n// setDisplayArray(arrayRef.current.map((value, index) => {\n//   return <div className='bar' style = {{height: `${HEIGHT}px`, width: `${value*WIDTH_MULTIPLIER}px`, fontSize:`${arrayRef.current.length > 90 ? 0 : 1}rem`}} key={index} id={index}>{value}</div>\n// }))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}